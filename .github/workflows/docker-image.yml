name: Docker Image CI

on:
  push:
    branches:
      - "master"
      - "staging/*"
  pull_request:
    branches:
      - "master"
      - "staging/*"

env:
  DOCKER_IMAGE_TAG: ${{ github.sha }}
  REPO: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Cache Yarn dependencies for faster builds
    - name: Cache Yarn dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.yarn
          node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    # Build and push Docker image
    - name: Build and Push Docker image
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --cache-from=type=registry,ref=ghcr.io/${{ env.REPO }}:cache \
          --cache-to=type=registry,ref=ghcr.io/${{ env.REPO }}:cache,mode=max \
          --tag ghcr.io/${{ env.REPO }}:${{ env.DOCKER_IMAGE_TAG }} \
          --tag ghcr.io/${{ env.REPO }}:latest \
          --push .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Pull Docker image for testing
      run: |
        docker pull ghcr.io/${{ env.REPO }}:${{ env.DOCKER_IMAGE_TAG }}

    - name: Run Tests
      run: |
        docker run --rm ghcr.io/${{ env.REPO }}:${{ env.DOCKER_IMAGE_TAG }} \
        echo "Running container tests..."

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/staging/'))

    steps:
    - uses: actions/checkout@v4

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    # Deploy to the correct environment
    - name: Deploy to Production Server
      if: github.ref == 'refs/heads/master'
      run: |
        echo "Deploying to production..."
        # ssh user@production-server

    - name: Deploy to Staging Server
      if: startsWith(github.ref, 'refs/heads/staging/')
      run: |
        echo "Deploying to staging..."
        # ssh user@staging-server

    - name: Log out from Docker
      run: docker logout
